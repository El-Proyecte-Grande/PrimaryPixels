// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrimaryPixels.Data;

#nullable disable

namespace PrimaryPixels.Migrations
{
    [DbContext(typeof(PrimaryPixelsContext))]
    [Migration("20250120141543_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PrimaryPixels.Models.Order.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PrimaryPixels.Models.Order.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("PrimaryPixels.Models.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("TotalSold")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("ProductType").HasValue("Product");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PrimaryPixels.Models.ShoppingCartItem.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("PrimaryPixels.Models.Products.Device", b =>
                {
                    b.HasBaseType("PrimaryPixels.Models.Products.Product");

                    b.Property<string>("Cpu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cpu");

                    b.Property<int>("InternalMemory")
                        .HasColumnType("int")
                        .HasColumnName("InternalMemory");

                    b.Property<int>("Ram")
                        .HasColumnType("int")
                        .HasColumnName("Ram");

                    b.HasDiscriminator().HasValue("Device");
                });

            modelBuilder.Entity("PrimaryPixels.Models.Products.Headphone", b =>
                {
                    b.HasBaseType("PrimaryPixels.Models.Products.Product");

                    b.Property<bool>("Wireless")
                        .HasColumnType("bit")
                        .HasColumnName("Wireless");

                    b.HasDiscriminator().HasValue("Headphone");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            Availability = true,
                            Image = "https://cdn.lifehack.org/wp-content/uploads/2014/12/28.jpg",
                            Name = "Ultra pro max Headphone 2000",
                            Price = 500,
                            TotalSold = 0,
                            Wireless = false
                        },
                        new
                        {
                            Id = 7,
                            Availability = true,
                            Image = "https://assets.mmsrg.com/isr/166325/c1/-/ASSET_MMS_135532150?x=536&y=402&format=jpg&quality=80&sp=yes&strip=yes&trim&ex=536&ey=402&align=center&resizesource&unsharp=1.5x1+0.7+0.02&cox=0&coy=0&cdx=536&cdy=402",
                            Name = "DAH6789WH Bluetooth Headphone",
                            Price = 20000,
                            TotalSold = 1,
                            Wireless = true
                        },
                        new
                        {
                            Id = 8,
                            Availability = false,
                            Image = "https://assets.mmsrg.com/isr/166325/c1/-/pixelboxx-mss-81231790?x=536&y=402&format=jpg&quality=80&sp=yes&strip=yes&trim&ex=536&ey=402&align=center&resizesource&unsharp=1.5x1+0.7+0.02&cox=0&coy=0&cdx=536&cdy=402",
                            Name = "Kids Headphone 3000",
                            Price = 2000,
                            TotalSold = 1,
                            Wireless = false
                        },
                        new
                        {
                            Id = 9,
                            Availability = true,
                            Image = "https://assets.mmsrg.com/isr/166325/c1/-/ASSET_MMS_77379180?x=536&y=402&format=jpg&quality=80&sp=yes&strip=yes&trim&ex=536&ey=402&align=center&resizesource&unsharp=1.5x1+0.7+0.02&cox=0&coy=0&cdx=536&cdy=402",
                            Name = "Ultra wireless Headphone",
                            Price = 3000,
                            TotalSold = 9,
                            Wireless = true
                        },
                        new
                        {
                            Id = 10,
                            Availability = true,
                            Image = "https://assets.mmsrg.com/isr/166325/c1/-/ASSET_MMS_140559725?x=536&y=402&format=jpg&quality=80&sp=yes&strip=yes&trim&ex=536&ey=402&align=center&resizesource&unsharp=1.5x1+0.7+0.02&cox=0&coy=0&cdx=536&cdy=402",
                            Name = "Ultra Stereo BT Headset 300",
                            Price = 15000,
                            TotalSold = 0,
                            Wireless = true
                        });
                });

            modelBuilder.Entity("PrimaryPixels.Models.Products.Computer", b =>
                {
                    b.HasBaseType("PrimaryPixels.Models.Products.Device");

                    b.Property<bool>("DvdPlayer")
                        .HasColumnType("bit")
                        .HasColumnName("DvdPlayer");

                    b.HasDiscriminator().HasValue("Computer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Availability = true,
                            Image = "https://assets.mmsrg.com/isr/166325/c1/-/ASSET_MMS_98587778/mobile_786_587_png/X-X-GAMER-I3228-Gamer-PC-%28Core-i5-16GB-480-GB-SSD---2-TB-HDD-RX6750XT-12GB-NoOS%29",
                            Name = "Gaming PC 3510",
                            Price = 100000,
                            TotalSold = 0,
                            Cpu = "I3-6100",
                            InternalMemory = 512,
                            Ram = 8,
                            DvdPlayer = false
                        },
                        new
                        {
                            Id = 2,
                            Availability = true,
                            Image = "https://assets.mmsrg.com/isr/166325/c1/-/ASSET_MMS_143744896/mobile_786_587_png/SHARKGAMING-RGBeast-R900-SGRGBR900-33-4090-Gamer-PC-%28Ryzen9-32GB-2x1024-GB-SSD-Win11H%29",
                            Name = "Gaming PC 5000",
                            Price = 5000000,
                            TotalSold = 0,
                            Cpu = "I5-8100",
                            InternalMemory = 1024,
                            Ram = 16,
                            DvdPlayer = false
                        },
                        new
                        {
                            Id = 3,
                            Availability = true,
                            Image = "https://assets.mmsrg.com/isr/166325/c1/-/ASSET_MMS_146904591?x=536&y=402&format=jpg&quality=80&sp=yes&strip=yes&trim&ex=536&ey=402&align=center&resizesource&unsharp=1.5x1+0.7+0.02&cox=0&coy=0&cdx=536&cdy=402",
                            Name = "Gamer PC A-I5642",
                            Price = 800000,
                            TotalSold = 3,
                            Cpu = "i9-14911KF",
                            InternalMemory = 2048,
                            Ram = 16,
                            DvdPlayer = true
                        },
                        new
                        {
                            Id = 4,
                            Availability = false,
                            Image = "https://assets.mmsrg.com/isr/166325/c1/-/ASSET_MMS_98587780?x=536&y=402&format=jpg&quality=80&sp=yes&strip=yes&trim&ex=536&ey=402&align=center&resizesource&unsharp=1.5x1+0.7+0.02&cox=0&coy=0&cdx=536&cdy=402",
                            Name = "Gamer PC A-I7689",
                            Price = 1000000,
                            TotalSold = 5,
                            Cpu = "i9-45500KJ",
                            InternalMemory = 2048,
                            Ram = 32,
                            DvdPlayer = true
                        },
                        new
                        {
                            Id = 5,
                            Availability = true,
                            Image = "https://assets.mmsrg.com/isr/166325/c1/-/ASSET_MMS_138935428?x=536&y=402&format=jpg&quality=80&sp=yes&strip=yes&trim&ex=536&ey=402&align=center&resizesource&unsharp=1.5x1+0.7+0.02&cox=0&coy=0&cdx=536&cdy=402",
                            Name = "Gamer PC C-I4567",
                            Price = 1300000,
                            TotalSold = 11,
                            Cpu = "I6-2300",
                            InternalMemory = 1024,
                            Ram = 32,
                            DvdPlayer = false
                        });
                });

            modelBuilder.Entity("PrimaryPixels.Models.Products.Phone", b =>
                {
                    b.HasBaseType("PrimaryPixels.Models.Products.Device");

                    b.Property<bool>("CardIndependency")
                        .HasColumnType("bit")
                        .HasColumnName("CardIndependency");

                    b.HasDiscriminator().HasValue("Phone");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Availability = true,
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSELHPTLjLUf8sBWPzXg7bTDdG1nClBF5Kc4A&s",
                            Name = "Redmi A24",
                            Price = 100000,
                            TotalSold = 0,
                            Cpu = "Dimensity 9400",
                            InternalMemory = 128,
                            Ram = 4,
                            CardIndependency = true
                        },
                        new
                        {
                            Id = 12,
                            Availability = true,
                            Image = "https://www.tecnosell.com/media/catalog/product/cache/60c31028333b516fd0f8945d994bb7aa/b/l/blu1_2_7_1.jpg",
                            Name = "iPhone 19",
                            Price = 5000000,
                            TotalSold = 0,
                            Cpu = "Dimensity 11000",
                            InternalMemory = 512,
                            Ram = 16,
                            CardIndependency = false
                        },
                        new
                        {
                            Id = 13,
                            Availability = true,
                            Image = "https://cdn.tmobile.com/content/dam/t-mobile/en-p/cell-phones/apple/Apple-iPhone-15-Plus/Pink/Apple-iPhone-15-Plus-Pink-thumbnail.png",
                            Name = "Redmi A29",
                            Price = 600000,
                            TotalSold = 0,
                            Cpu = "Dimensity 9800",
                            InternalMemory = 256,
                            Ram = 8,
                            CardIndependency = true
                        },
                        new
                        {
                            Id = 14,
                            Availability = false,
                            Image = "https://assets.mmsrg.com/isr/166325/c1/-/ASSET_MMS_137998148?x=536&y=402&format=jpg&quality=80&sp=yes&strip=yes&trim&ex=536&ey=402&align=center&resizesource&unsharp=1.5x1+0.7+0.02&cox=0&coy=0&cdx=536&cdy=402",
                            Name = "Samsung Galaxy E100",
                            Price = 260000,
                            TotalSold = 2,
                            Cpu = "Exynos 4520",
                            InternalMemory = 256,
                            Ram = 8,
                            CardIndependency = false
                        },
                        new
                        {
                            Id = 15,
                            Availability = true,
                            Image = "https://assets.mmsrg.com/isr/166325/c1/-/ASSET_MMS_144574340?x=536&y=402&format=jpg&quality=80&sp=yes&strip=yes&trim&ex=536&ey=402&align=center&resizesource&unsharp=1.5x1+0.7+0.02&cox=0&coy=0&cdx=536&cdy=402",
                            Name = "HONOR AZC",
                            Price = 105000,
                            TotalSold = 8,
                            Cpu = "Exynos 3434",
                            InternalMemory = 128,
                            Ram = 16,
                            CardIndependency = true
                        });
                });

            modelBuilder.Entity("PrimaryPixels.Models.ShoppingCartItem.ShoppingCartItem", b =>
                {
                    b.HasOne("PrimaryPixels.Models.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
